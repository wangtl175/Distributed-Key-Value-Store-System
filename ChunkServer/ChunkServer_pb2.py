# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: ChunkServer.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='ChunkServer.proto',
  package='ChunkServer',
  syntax='proto3',
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\x11\x43hunkServer.proto\x12\x0b\x43hunkServer\"\"\n\x05Reply\x12\x0b\n\x03msg\x18\x01 \x01(\t\x12\x0c\n\x04\x63ode\x18\x02 \x01(\x05\"\x12\n\x03Key\x12\x0b\n\x03key\x18\x01 \x01(\t\"L\n\x05Value\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t\x12\x0c\n\x04type\x18\x03 \x01(\t\x12\x0b\n\x03msg\x18\x04 \x01(\t\x12\x0c\n\x04\x63ode\x18\x05 \x01(\x05\"/\n\x07Primary\x12\n\n\x02id\x18\x01 \x01(\t\x12\n\n\x02ip\x18\x02 \x01(\t\x12\x0c\n\x04port\x18\x03 \x01(\t\"1\n\tSecondary\x12\n\n\x02id\x18\x01 \x01(\t\x12\n\n\x02ip\x18\x02 \x01(\t\x12\x0c\n\x04port\x18\x03 \x01(\t\"\x07\n\x05\x45mpty2\xca\x05\n\x0b\x43hunkServer\x12\x31\n\x05heart\x12\x12.ChunkServer.Empty\x1a\x12.ChunkServer.Reply\"\x00\x12\x31\n\x07get_key\x12\x10.ChunkServer.Key\x1a\x12.ChunkServer.Value\"\x00\x12\x36\n\ninsert_key\x12\x12.ChunkServer.Value\x1a\x12.ChunkServer.Reply\"\x00\x12\x34\n\ndelete_key\x12\x10.ChunkServer.Key\x1a\x12.ChunkServer.Reply\"\x00\x12\x36\n\nupdate_key\x12\x12.ChunkServer.Value\x1a\x12.ChunkServer.Reply\"\x00\x12=\n\radd_secondary\x12\x16.ChunkServer.Secondary\x1a\x12.ChunkServer.Reply\"\x00\x12\x39\n\tadd_mates\x12\x16.ChunkServer.Secondary\x1a\x12.ChunkServer.Reply\"\x00\x12<\n\nsync_mates\x12\x12.ChunkServer.Empty\x1a\x16.ChunkServer.Secondary\"\x00\x30\x01\x12\x39\n\x0bsync_tables\x12\x12.ChunkServer.Empty\x1a\x12.ChunkServer.Value\"\x00\x30\x01\x12\x42\n\x0eselect_primary\x12\x16.ChunkServer.Secondary\x1a\x16.ChunkServer.Secondary\"\x00\x12=\n\x0freplace_primary\x12\x14.ChunkServer.Primary\x1a\x12.ChunkServer.Reply\"\x00\x12\x39\n\x0bget_primary\x12\x12.ChunkServer.Empty\x1a\x14.ChunkServer.Primary\"\x00\x62\x06proto3'
)




_REPLY = _descriptor.Descriptor(
  name='Reply',
  full_name='ChunkServer.Reply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='msg', full_name='ChunkServer.Reply.msg', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='code', full_name='ChunkServer.Reply.code', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=34,
  serialized_end=68,
)


_KEY = _descriptor.Descriptor(
  name='Key',
  full_name='ChunkServer.Key',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='ChunkServer.Key.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=70,
  serialized_end=88,
)


_VALUE = _descriptor.Descriptor(
  name='Value',
  full_name='ChunkServer.Value',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='ChunkServer.Value.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='value', full_name='ChunkServer.Value.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='type', full_name='ChunkServer.Value.type', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='msg', full_name='ChunkServer.Value.msg', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='code', full_name='ChunkServer.Value.code', index=4,
      number=5, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=90,
  serialized_end=166,
)


_PRIMARY = _descriptor.Descriptor(
  name='Primary',
  full_name='ChunkServer.Primary',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='ChunkServer.Primary.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='ip', full_name='ChunkServer.Primary.ip', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='port', full_name='ChunkServer.Primary.port', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=168,
  serialized_end=215,
)


_SECONDARY = _descriptor.Descriptor(
  name='Secondary',
  full_name='ChunkServer.Secondary',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='ChunkServer.Secondary.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='ip', full_name='ChunkServer.Secondary.ip', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='port', full_name='ChunkServer.Secondary.port', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=217,
  serialized_end=266,
)


_EMPTY = _descriptor.Descriptor(
  name='Empty',
  full_name='ChunkServer.Empty',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=268,
  serialized_end=275,
)

DESCRIPTOR.message_types_by_name['Reply'] = _REPLY
DESCRIPTOR.message_types_by_name['Key'] = _KEY
DESCRIPTOR.message_types_by_name['Value'] = _VALUE
DESCRIPTOR.message_types_by_name['Primary'] = _PRIMARY
DESCRIPTOR.message_types_by_name['Secondary'] = _SECONDARY
DESCRIPTOR.message_types_by_name['Empty'] = _EMPTY
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Reply = _reflection.GeneratedProtocolMessageType('Reply', (_message.Message,), {
  'DESCRIPTOR' : _REPLY,
  '__module__' : 'ChunkServer_pb2'
  # @@protoc_insertion_point(class_scope:ChunkServer.Reply)
  })
_sym_db.RegisterMessage(Reply)

Key = _reflection.GeneratedProtocolMessageType('Key', (_message.Message,), {
  'DESCRIPTOR' : _KEY,
  '__module__' : 'ChunkServer_pb2'
  # @@protoc_insertion_point(class_scope:ChunkServer.Key)
  })
_sym_db.RegisterMessage(Key)

Value = _reflection.GeneratedProtocolMessageType('Value', (_message.Message,), {
  'DESCRIPTOR' : _VALUE,
  '__module__' : 'ChunkServer_pb2'
  # @@protoc_insertion_point(class_scope:ChunkServer.Value)
  })
_sym_db.RegisterMessage(Value)

Primary = _reflection.GeneratedProtocolMessageType('Primary', (_message.Message,), {
  'DESCRIPTOR' : _PRIMARY,
  '__module__' : 'ChunkServer_pb2'
  # @@protoc_insertion_point(class_scope:ChunkServer.Primary)
  })
_sym_db.RegisterMessage(Primary)

Secondary = _reflection.GeneratedProtocolMessageType('Secondary', (_message.Message,), {
  'DESCRIPTOR' : _SECONDARY,
  '__module__' : 'ChunkServer_pb2'
  # @@protoc_insertion_point(class_scope:ChunkServer.Secondary)
  })
_sym_db.RegisterMessage(Secondary)

Empty = _reflection.GeneratedProtocolMessageType('Empty', (_message.Message,), {
  'DESCRIPTOR' : _EMPTY,
  '__module__' : 'ChunkServer_pb2'
  # @@protoc_insertion_point(class_scope:ChunkServer.Empty)
  })
_sym_db.RegisterMessage(Empty)



_CHUNKSERVER = _descriptor.ServiceDescriptor(
  name='ChunkServer',
  full_name='ChunkServer.ChunkServer',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_start=278,
  serialized_end=992,
  methods=[
  _descriptor.MethodDescriptor(
    name='heart',
    full_name='ChunkServer.ChunkServer.heart',
    index=0,
    containing_service=None,
    input_type=_EMPTY,
    output_type=_REPLY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='get_key',
    full_name='ChunkServer.ChunkServer.get_key',
    index=1,
    containing_service=None,
    input_type=_KEY,
    output_type=_VALUE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='insert_key',
    full_name='ChunkServer.ChunkServer.insert_key',
    index=2,
    containing_service=None,
    input_type=_VALUE,
    output_type=_REPLY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='delete_key',
    full_name='ChunkServer.ChunkServer.delete_key',
    index=3,
    containing_service=None,
    input_type=_KEY,
    output_type=_REPLY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='update_key',
    full_name='ChunkServer.ChunkServer.update_key',
    index=4,
    containing_service=None,
    input_type=_VALUE,
    output_type=_REPLY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='add_secondary',
    full_name='ChunkServer.ChunkServer.add_secondary',
    index=5,
    containing_service=None,
    input_type=_SECONDARY,
    output_type=_REPLY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='add_mates',
    full_name='ChunkServer.ChunkServer.add_mates',
    index=6,
    containing_service=None,
    input_type=_SECONDARY,
    output_type=_REPLY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='sync_mates',
    full_name='ChunkServer.ChunkServer.sync_mates',
    index=7,
    containing_service=None,
    input_type=_EMPTY,
    output_type=_SECONDARY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='sync_tables',
    full_name='ChunkServer.ChunkServer.sync_tables',
    index=8,
    containing_service=None,
    input_type=_EMPTY,
    output_type=_VALUE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='select_primary',
    full_name='ChunkServer.ChunkServer.select_primary',
    index=9,
    containing_service=None,
    input_type=_SECONDARY,
    output_type=_SECONDARY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='replace_primary',
    full_name='ChunkServer.ChunkServer.replace_primary',
    index=10,
    containing_service=None,
    input_type=_PRIMARY,
    output_type=_REPLY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='get_primary',
    full_name='ChunkServer.ChunkServer.get_primary',
    index=11,
    containing_service=None,
    input_type=_EMPTY,
    output_type=_PRIMARY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
])
_sym_db.RegisterServiceDescriptor(_CHUNKSERVER)

DESCRIPTOR.services_by_name['ChunkServer'] = _CHUNKSERVER

# @@protoc_insertion_point(module_scope)
